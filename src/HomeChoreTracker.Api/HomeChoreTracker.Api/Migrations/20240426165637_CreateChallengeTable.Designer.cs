// <auto-generated />
using System;
using HomeChoreTracker.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeChoreTracker.Api.Migrations
{
    [DbContext(typeof(HomeChoreTrackerDbContext))]
    [Migration("20240426165637_CreateChallengeTable")]
    partial class CreateChallengeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Advice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Advices");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Avatar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvatarType")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.AvatarPurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvatarId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("UserId");

                    b.ToTable("AvatarPurchases");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.BadgeWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CreateFirstAdvice")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateFirstExpense")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateFirstIncome")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateFirstPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("CreatedTaskWasUsedOtherHome")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFirstBathroomTask")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFirstBedroomTask")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFirstCleaningTask")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFirstKitchenTask")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFirstLaundryTask")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFirstOrganizeTask")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFirstOutdoorsTask")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFirstTask")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneFiveTaskPerWeek")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneTenTaskPerWeek")
                        .HasColumnType("bit");

                    b.Property<bool>("DoneTwentyFiveTaskPerWeek")
                        .HasColumnType("bit");

                    b.Property<bool>("EarnedPerDayFiftyPoints")
                        .HasColumnType("bit");

                    b.Property<bool>("EarnedPerDayHundredPoints")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BadgeWallets");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.BusyInterval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BusyIntervals");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("ChallengeCount")
                        .HasColumnType("int");

                    b.Property<int>("ChallengeType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HomeId")
                        .HasColumnType("int");

                    b.Property<int?>("OpponentHomeId")
                        .HasColumnType("int");

                    b.Property<int>("OpponentType")
                        .HasColumnType("int");

                    b.Property<int?>("OpponentUserId")
                        .HasColumnType("int");

                    b.Property<int>("ResultType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.FinancialCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HomeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FinancialCategories");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.FinancialRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinancialCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("HomeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FinancialRecords");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.GamificationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<int?>("PointsRequired")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GamificationLevels");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Home", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GamificationLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GamificationLevelId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.HomeChoreBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChoreType")
                        .HasColumnType("int");

                    b.Property<int?>("DayOfMonth")
                        .HasColumnType("int");

                    b.Property<string>("DaysOfWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomeId")
                        .HasColumnType("int");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<int>("LevelType")
                        .HasColumnType("int");

                    b.Property<int?>("MonthlyRepeatType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HomeChoresBases");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.HomeChoreTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChoreType")
                        .HasColumnType("int");

                    b.Property<int?>("DayOfMonth")
                        .HasColumnType("int");

                    b.Property<string>("DaysOfWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LevelType")
                        .HasColumnType("int");

                    b.Property<int?>("MonthlyRepeatType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<bool>("WasEarnedPoints")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.ToTable("HomeChoreTasks");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.HomeInvitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<string>("InvitationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InviteeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InviterUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("InviterUserId");

                    b.ToTable("HomeInvitations");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.PointsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EarnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EarnedPoints")
                        .HasColumnType("int");

                    b.Property<int?>("HomeId")
                        .HasColumnType("int");

                    b.Property<int?>("HomeMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HomeMemberId");

                    b.ToTable("PointsHistory");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.ShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HomeChoreTaskId")
                        .HasColumnType("int");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityType")
                        .HasColumnType("int");

                    b.Property<int?>("Time")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WasBought")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseId");

                    b.ToTable("ShoppingItems");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.TaskAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<int?>("HomeMemberId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskAssignments");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.TaskVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TaskAssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskAssignmentId");

                    b.ToTable("TaskVotes");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AvatarId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndDayTime")
                        .HasColumnType("time");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartDayTime")
                        .HasColumnType("time");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.UserHomes", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "HomeId");

                    b.HasIndex("HomeId");

                    b.ToTable("UserHomes");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Advice", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany("Advices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.AvatarPurchase", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.Avatar", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany("AvatarPurchase")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avatar");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.BadgeWallet", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithOne("BadgeWallet")
                        .HasForeignKey("HomeChoreTracker.Api.Models.BadgeWallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.BusyInterval", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany("BusyIntervals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Event", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany("CalendarEvents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.FinancialCategory", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.FinancialRecord", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany("FinancialRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Home", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.GamificationLevel", "GamificationLevel")
                        .WithMany()
                        .HasForeignKey("GamificationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GamificationLevel");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.HomeChoreTask", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.Home", "Home")
                        .WithMany("Tasks")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.HomeInvitation", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.Home", "Home")
                        .WithMany()
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeChoreTracker.Api.Models.User", "InviterUser")
                        .WithMany()
                        .HasForeignKey("InviterUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("InviterUser");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Notification", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.PointsHistory", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany("PointsHistories")
                        .HasForeignKey("HomeMemberId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Purchase", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.Home", "Home")
                        .WithMany("Purchases")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.ShoppingItem", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.Purchase", null)
                        .WithMany("Items")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.TaskAssignment", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.HomeChoreTask", "Task")
                        .WithMany("TaskAssignments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.TaskVote", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.TaskAssignment", "TaskAssignment")
                        .WithMany("TaskVotes")
                        .HasForeignKey("TaskAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskAssignment");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.User", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.Avatar", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.UserHomes", b =>
                {
                    b.HasOne("HomeChoreTracker.Api.Models.Home", "Home")
                        .WithMany("UserHomes")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeChoreTracker.Api.Models.User", "User")
                        .WithMany("UserHomes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Home", b =>
                {
                    b.Navigation("Purchases");

                    b.Navigation("Tasks");

                    b.Navigation("UserHomes");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.HomeChoreTask", b =>
                {
                    b.Navigation("TaskAssignments");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.Purchase", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.TaskAssignment", b =>
                {
                    b.Navigation("TaskVotes");
                });

            modelBuilder.Entity("HomeChoreTracker.Api.Models.User", b =>
                {
                    b.Navigation("Advices");

                    b.Navigation("AvatarPurchase");

                    b.Navigation("BadgeWallet")
                        .IsRequired();

                    b.Navigation("BusyIntervals");

                    b.Navigation("CalendarEvents");

                    b.Navigation("FinancialRecords");

                    b.Navigation("Notifications");

                    b.Navigation("PointsHistories");

                    b.Navigation("UserHomes");
                });
#pragma warning restore 612, 618
        }
    }
}

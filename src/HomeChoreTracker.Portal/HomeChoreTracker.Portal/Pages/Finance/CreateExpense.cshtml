@page
@model HomeChoreTracker.Portal.Pages.Finance.CreateExpenseModel
@{
	Layout = "~/Pages/Shared/_Layout.cshtml";
}
@section HeadContent
{
	<title>@ViewData["Title"] - Home Chore Tracker</title>
	<link href="~/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" asp-append-version="true">
	<link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
		  rel="stylesheet" asp-append-version="true">
	<link href="~/css/sb-admin-2.min.css" rel="stylesheet" asp-append-version="true">
	<!-- Add the following lines to include required Bootstrap and jQuery files -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
}
@if (!User.Identity.IsAuthenticated)
{
	Response.Redirect("/Auth/Login");
}
else if (User.IsInRole("User"))
{
	<div class="row">
		<div class="col-lg-12">
			<a class="btn btn-light btn-sm mb-2" href="/Finance"><i class="fa fa-signal mr-2" aria-hidden="true"></i>Statistics</a>
			<a class="btn btn-light btn-sm mb-2" asp-page="./CreateIncome"><i class="fa fa-plus-circle mr-2" aria-hidden="true"></i>Create income</a>
			<a class="btn btn-secondary btn-sm mb-2" asp-page="./CreateExpense"><i class="fa fa-plus-circle mr-2" aria-hidden="true"></i>Create expense</a>
			<a class="btn btn-light btn-sm mb-2" asp-page="./CreateExpenseFromImage"><i class="fa fa-plus-circle mr-2" aria-hidden="true"></i>Create expense from image</a>
			<a class="btn btn-light btn-sm mb-2" asp-page="./GenerateReport"><i class="fa fa-file mr-2" aria-hidden="true"></i>Generate report</a>
			<a class="btn btn-light btn-sm mb-2" asp-page="./History"><i class="fa fa-history mr-2" aria-hidden="true"></i>History</a>

			<div class="card mb-4 py-3 mt-2 border-left-primary">
				<div class="card-body">
					<form method="post" asp-action="Index">
						<div class="form-group">
							<label for="Title">Title</label>
							<input type="text" class="form-control" id="Title" name="CreateNewExpense.Title" asp-for="CreateNewExpense.Title">
							<span asp-validation-for="CreateNewExpense.Title" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label for="Amount">Amount</label>
							<input type="number" class="form-control" id="Amount" name="CreateNewExpense.Amount" asp-for="CreateNewExpense.Amount" step="0.01" min="0.01">
							<span asp-validation-for="CreateNewExpense.Amount" class="text-danger"></span>
							<span id="amountErrorMessage" class="text-danger" style="display:none;">Amount is required, has to be more than 0</span>
						</div>
						<div class="form-group">
							<label for="Description">Description</label>
							<input type="text" class="form-control" id="Description" name="CreateNewExpense.Description" asp-for="CreateNewExpense.Description">
						</div>
						<div class="form-group">
							<label for="Time">Time</label>
							<input type="datetime-local" class="form-control" id="Time" name="CreateNewExpense.Time" asp-for="CreateNewExpense.Time">
							<span asp-validation-for="CreateNewExpense.Time" class="text-danger"></span>
							<span id="timeErrorMessage" class="text-danger" style="display:none;">Time is required</span>
						</div>
						<div class="form-group">
							<label for="TypeId">Type</label>
							<select class="form-control" id="TypeId" name="CreateNewExpense.FinancialCategoryId" asp-for="CreateNewExpense.FinancialCategoryId">
								<option value="0">Create new type</option>
								@if (Model.FinancialCategories != null)
								{
									@foreach (var category in Model.FinancialCategories)
									{
										<option value="@category.Id">@category.Name</option>
									}
								}
							</select>
						</div>
						<div class="form-group" id="newTypeField">
							<label for="NewType">New Type</label>
							<input type="text" class="form-control" id="NewType" name="CreateNewExpense.NewFinancialCategory" asp-for="CreateNewExpense.NewFinancialCategory">
						</div>
						<div class="form-group">
							<label for="HomeId">Select Home</label>
							<select class="form-control" id="HomeId" name="CreateNewExpense.HomeId" asp-for="CreateNewExpense.HomeId">
								<option value=""></option>
								@foreach (var home in Model.Homes)
								{
									<option value="@home.Id">@home.Title</option>
								}
							</select>
						</div>
						<button type="submit" class="btn btn-primary">Create</button>
					</form>
				</div>
			</div>
		</div>
	</div>
}
else
{
	<div class="row">
		<div class="col-lg-12">
			<div class="card mb-4 py-3 border-left-primary">
				<div class="collapse show">
					<div class="card-body">
						<p>You don't have permission to view this content.</p>
					</div>
				</div>
			</div>
		</div>
	</div>
}

<script>
	document.getElementById('TypeId').addEventListener('change', function () {
		var selectedCategoryId = this.value;
		var newTypeField = document.getElementById('newTypeField');

		if (selectedCategoryId === "0") {
			newTypeField.style.display = 'block';
		} else {
			newTypeField.style.display = 'none';
		}
	});
</script>

<script>
	function getTodayISOString() {
		var now = new Date();
		var year = now.getFullYear();
		var month = (now.getMonth() + 1).toString().padStart(2, '0');
		var day = now.getDate().toString().padStart(2, '0');
		var hours = now.getHours().toString().padStart(2, '0');
		var minutes = now.getMinutes().toString().padStart(2, '0');

		return `${year}-${month}-${day}T${hours}:${minutes}`;
	}

	document.getElementById('Time').value = getTodayISOString();
	document.getElementById('Amount').value = '0.01';

</script>

<script>
	function validateTime() {
		var timeInput = document.getElementById('Time');
		var errorMessage = document.getElementById('timeErrorMessage');

		if (!timeInput.value) {
			errorMessage.style.display = 'inline';
			return false;
		} else {
			errorMessage.style.display = 'none';
			return true;
		}
	}

	document.querySelector('form').addEventListener('submit', function (event) {
		if (!validateTime()) {
			event.preventDefault();
		}
	});

	document.getElementById('Time').addEventListener('blur', validateTime);
</script>
<script>
	function validateAmount() {
		var amountInput = document.getElementById('Amount');
		var errorMessage = document.getElementById('amountErrorMessage');
		var amountValue = parseFloat(amountInput.value);

		if (isNaN(amountValue) || amountValue <= 0) {
			errorMessage.style.display = 'inline';
			return false;
		} else {
			errorMessage.style.display = 'none';
			return true;
		}
	}

	document.querySelector('form').addEventListener('submit', function (event) {
		if (!validateAmount()) {
			event.preventDefault();
		}
	});

	document.getElementById('Amount').addEventListener('blur', validateAmount);
</script>

@page
@model HomeChoreTracker.Portal.Pages.HomeChoreBase.IndexModel
@{
	ViewData["Title"] = "Home Chores";
}
@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
	<div class="row">
		<div class="col-lg-12">
			<a class="btn btn-secondary btn-sm mb-2" href="~/HomeChoreBase"><i class="fa fa-archive mr-2" aria-hidden="true"></i>Home chores</a>
			<a class="btn btn-light btn-sm mb-2" asp-page="./Create"><i class="fa fa-plus-circle mr-2" aria-hidden="true"></i>Create</a>

			<div class="card mb-4 py-3 border-left-primary">
				<div class="card-body">
					<div class="d-sm-flex align-items-center justify-content-between mb-4">
						<h1 class="h3 mb-0 text-gray-800">@ViewData["Title"]</h1>
						<div class="btn btn-sm btn-primary shadow-sm d-inline-block d-sm-none" data-toggle="modal"
							 data-target="#createHomeChoreModal">
							<i class="fa fa-plus-circle mr-2" aria-hidden="true"></i> Home Chore
						</div>
					</div>
					@if (Model.HomeChoreBases != null && Model.HomeChoreBases.Any())
					{
						<table class="table">
							<thead>
								<tr>
									<th>Name</th>
									<th>Chore Type</th>
									<th>Actions</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var choreBase in Model.HomeChoreBases)
								{
									<tr>
										<td>@choreBase.Name</td>
										<td>@choreBase.ChoreType</td>
										<td>
											<button class='btn btn-sm' onclick="DisplayDetailModal('@choreBase.Id')">
												<i class="fa fa-ellipsis-h" aria-hidden="true"></i>
											</button>
											<button class='btn btn-sm' onclick="DisplayEditModal('@choreBase.Id')">
												<i class='fa fa-pencil-alt'></i>
											</button>
											<a class='btn btn-sm' id='btnDelete' data-toggle="modal" data-target="#DeleteModal-@choreBase.Id"><i class='fa fa-trash'></i></a>
											<div class="modal" tabindex="-1" role="dialog" id="DeleteModal-@choreBase.Id">
												<div class="modal-dialog" role="document">
													<div class="modal-content">
														<div class="modal-header">
															<h5 class="modal-title">Delete Confirmation</h5>
															<button type="button" class="close" data-dismiss="modal" aria-label="Close">
																<span aria-hidden="true">&times;</span>
															</button>
														</div>
														<div class="modal-body">
															<p>Are you sure you want to delete this '@choreBase.Name' home chore?</p>
														</div>
														<div class="modal-footer">
															<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
															<form method="post" asp-page-handler="Delete" asp-route-id="@choreBase.Id">
																<button type="submit" class="btn btn-danger">Delete</button>
															</form>
														</div>
													</div>
												</div>
										</td>
									</tr>
								}
							</tbody>
						</table>
						<div>
							<ul class="pagination">
								@if (Model.ShowPrevious)
								{
									<li class="page-item">
										<a asp-page="/HomeChoreBase/Index" asp-route-currentpage="@(Model.CurrentPage -1)"
										   class="page-link">Previous</a>
									</li>
								}
								@if (Model.ShowNext)
								{
									<li class="page-item">
										<a asp-page="/HomeChoreBase/Index" asp-route-currentpage="@(Model.CurrentPage + 1)"
										   class="page-link">Next</a>
									</li>
								}
							</ul>
						</div>
					}
					else
					{
						<p>No home chore bases found.</p>
					}
				</div>
			</div>
		</div>
	</div>

	<div class="modal fade" id="detailModal" tabindex="-1" role="dialog" aria-labelledby="detailModalLabel"
		 aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="detailModalLabel">Chore Details</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<p id="choreName"></p>
					<p id="choreType"></p>
					<p id="description"></p>
					<p id="time"></p>
					<p id="repeatingData"></p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel"
		 aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="editModalLabel">Edit Chore</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<form method="post" asp-page-handler="Edit" id="editForm">
						<input type="hidden" id="editChoreId" name="id" value="" />
						<div class="form-group">
							<label for="editName">Name</label>
							<input asp-for="EditHomeChore.Name" name="editName" class="form-control" id="editName" />
							<div id="nameError" class="text-danger" style="display: none;">Name is required.</div>
						</div>
						<div class="form-group">
							<label for="editChoreType">Chore Type</label>
							<select class="form-control" id="editChoreType" name="editChoreType" asp-for="EditHomeChore.ChoreType" required>
								@foreach (var choreType in Enum.GetValues(typeof(HomeChoreTracker.Portal.Constants.HomeChoreType)))
								{
									<option value="@((int)choreType)">@choreType</option>
								}
							</select>
						</div>
						<div class="form-group">
							<label for="editDescription">Description</label>
							<textarea asp-for="EditHomeChore.Description" name="editDescription" class="form-control" id="editDescription"></textarea>
						</div>
						<div class="form-group">
							<label for="editPoints">Points</label>
							<input asp-for="EditHomeChore.Points" name="editPoints" class="form-control" id="editPoints" />
							<div id="pointsError" class="text-danger" style="display: none;">Points are required.</div>
						</div>
						<div class="form-group">
							<label for="editLevelType">Level Type</label>
							<select class="form-control" name="editLevelType" id="editLevelType" asp-for="EditHomeChore.LevelType" required>
								@foreach (var levelType in Enum.GetValues(typeof(HomeChoreTracker.Portal.Constants.LevelType)))
								{
									<option value="@((int)levelType)">@levelType</option>
								}
							</select>
						</div>
						<div class="form-group">
							<label for="editTime">Time</label>
							<select class="form-control" name="editTimeLong" id="editTimeLong" asp-for="EditHomeChore.Time" required>
								@foreach (var time in Enum.GetValues(typeof(HomeChoreTracker.Portal.Constants.TimeLong)))
								{
									<option value="@((int)time)">@time</option>
								}
							</select>
						</div>
						<div class="form-group">
							<label for="editInterval">Interval</label>
							<input asp-for="EditHomeChore.Interval" name="editInterval" class="form-control" id="editInterval" />
							<div id="intervalError" class="text-danger" style="display: none;">Interval is required.</div>
						</div>
						<div class="form-group">
							<label for="editUnit">Unit</label>
							<select class="form-control" id="editRepeatUnit" name="editRepeatUnit" asp-for="EditHomeChore.Unit" required>
								@foreach (var unit in Enum.GetValues(typeof(HomeChoreTracker.Portal.Constants.RepeatUnit)))
								{
									<option value="@((int)unit)">@unit</option>
								}
							</select>
						</div>
						<div class="form-group" id="editDayOfWeekField" style="display: none;">
							@foreach (var dayOfWeek in Enum.GetValues(typeof(HomeChoreTracker.Portal.Constants.DayOfWeek)))
							{
								var checkboxId = "editDayOfWeek_" + (int)dayOfWeek;
								var checkboxName = "editDaysOfWeek";
								<div class="form-check form-check-inline">
									<input class="form-check-input" type="checkbox" id="@checkboxId" name="@checkboxName" value="@((int)dayOfWeek)">
									<label class="form-check-label" for="@checkboxId">@dayOfWeek</label>
								</div>
							}
						</div>

						<div class="form-group" id="editDayOfMonthField" style="display: none;">
							<label for="editDayOfMonth">Day of Month</label>
							<input type="number" class="form-control" name="editDayOfMonth" id="editDayOfMonth" asp-for="EditHomeChore.DayOfMonth" min="1" max="31" value="1">
						</div>
						<div class="form-group" id="editMonthlyRepeatTypeField" style="display: none;">
							<label for="editMonthlyRepeatType">Monthly Repeat Type</label>
							<select class="form-control" name="editMonthlyRepeatType" id="editMonthlyRepeatType" asp-for="EditHomeChore.MonthlyRepeatType">
								@foreach (var monthlyRepeatType in Enum.GetValues(typeof(HomeChoreTracker.Portal.Constants.MonthlyRepeatType)))
								{
									<option value="@((int)monthlyRepeatType)">@monthlyRepeatType</option>
								}
							</select>
						</div>
						<button type="submit" class="btn btn-primary">Save changes</button>
					</form>
				</div>
			</div>
		</div>
	</div>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {
		$('#editForm').submit(function (event) {
			var name = $('#editName').val().trim();
			var points = $('#editPoints').val().trim();
			var interval = $('#editInterval').val().trim();

			if (name === '') {
				$('#nameError').text('Name is required.').show();
				event.preventDefault();
			} else {
				$('#nameError').hide();
			}

			if (points === '') {
				$('#pointsError').text('Points are required.').show();
				event.preventDefault();
			} else {
				$('#pointsError').hide();
			}

			if (interval === '') {
				$('#intervalError').text('Interval is required.').show();
				event.preventDefault();
			} else {
				$('#intervalError').hide();
			}
		});
	});
	$(document).ready(function () {
		$('#editRepeatUnit').change(function () {
			var unit = $(this).val();
			if (unit == '@((int)HomeChoreTracker.Portal.Constants.RepeatUnit.Day)') {
				$('#editDayOfWeekField').hide();
				$('#editDayOfMonthField').hide();
				$('#editMonthlyRepeatTypeField').hide();
			} else if (unit == '@((int)HomeChoreTracker.Portal.Constants.RepeatUnit.Week)') {
				$('#editDayOfWeekField').show();
				$('#editDayOfMonthField').hide();
				$('#editMonthlyRepeatTypeField').hide();
			} else if (unit == '@((int)HomeChoreTracker.Portal.Constants.RepeatUnit.Month)') {
				$('#editDayOfWeekField').hide();
				$('#editDayOfMonthField').show();
				$('#editMonthlyRepeatTypeField').show();
			} else if (unit == '@((int)HomeChoreTracker.Portal.Constants.RepeatUnit.Year)') {
				$('#editDayOfWeekField').hide();
				$('#editDayOfMonthField').hide();
				$('#editMonthlyRepeatTypeField').hide();
			}
		});

		$('#editRepeatUnit').trigger('change');
	});
</script>


<script>
	var currentChoreId;

	function DisplayDetailModal(choreId) {
		$.ajax({
			url: '@Url.Page("/HomeChoreBase/Index")?handler=Detail&id=' + choreId,
			type: 'GET',
			success: function (data) {
				$('#detailModalLabel').text("Detailed info: " + data.name);
				$('#choreName').text("Name: " + data.name);
				$('#choreType').text("Chore Type: " + data.choreType);
				$('#description').text("Description: " + data.description);
				$('#time').text("How long time take to do this task: " + data.time);
				$('#repeatingData').text("Repeating Data: " + data.repeatingData);

				$('#detailModal').modal('show');
			},
			error: function (error) {
				console.error('Error fetching chore details:', error);
			}
		});
	}

	function DisplayEditModal(choreId) {
		currentChoreId = choreId;
		$('#editChoreId').val(choreId);
		$.ajax({
			url: '@Url.Page("/HomeChoreBase/Index")?handler=Detail&id=' + choreId,
			type: 'GET',
			success: function (data) {
				if (data && data.name) {
					$('#editName').val(data.name);
					$('#editDescription').val(data.description);
					$('#editPoints').val(data.points);
					var timeLongText = data.time;
					$('#editTimeLong option').filter(function () {
						return $(this).text() === timeLongText;
					}).prop('selected', true);
					var levelTypeText = data.levelType;
					$('#editLevelType option').filter(function () {
						return $(this).text() === levelTypeText;
					}).prop('selected', true);
					$('#editInterval').val(data.interval);
					var unitTypeText = data.unit;
					$('#editRepeatUnit option').filter(function () {
						return $(this).text() === unitTypeText;
					}).prop('selected', true);
					var monthlyRepeatTypeText = data.monthlyRepeatType;
					$('#editMonthlyRepeatType option').filter(function () {
						return $(this).text() === monthlyRepeatTypeText;
					}).prop('selected', true);
					$('#editDayOfMonth').val(data.dayOfMonth);
					var choreTypeText = data.choreType;
					$('#editChoreType option').filter(function () {
						return $(this).text() === choreTypeText;
					}).prop('selected', true);
					if (data.daysOfWeek) {
						data.daysOfWeek.forEach(function (day) {
							var checkboxId = 'editDayOfWeek_' + day;
							$('#' + checkboxId).prop('checked', true);
						});
					}

					var unit = unitTypeText;
					if (unit === 'Day') {
						$('#editDayOfWeekField').hide();
						$('#editDayOfMonthField').hide();
						$('#editMonthlyRepeatTypeField').hide();
					} else if (unit === 'Week') {
						$('#editDayOfWeekField').show();
						$('#editDayOfMonthField').hide();
						$('#editMonthlyRepeatTypeField').hide();
					} else if (unit === 'Month') {
						$('#editDayOfWeekField').hide();
						$('#editDayOfMonthField').show();
						$('#editMonthlyRepeatTypeField').show();
					} else if (unit === 'Year') {
						$('#editDayOfWeekField').hide();
						$('#editDayOfMonthField').hide();
						$('#editMonthlyRepeatTypeField').hide();
					}

					$('#editModal').modal('show');
				} else {
					console.error('Invalid data format:', data);
				}
			},
			error: function (error) {
				console.error('Error fetching chore details:', error);
			}
		});
	}
</script>

@page
@model HomeChoreTracker.Portal.Pages.Forum.IndexModel
@{
    ViewData["Title"] = "Home";
}

@if (!User.Identity.IsAuthenticated)
{
	Response.Redirect("/Auth/Login");
}
@if (User.IsInRole("User"))
{
    <div class="row">
        <div class="col-lg-6">
            <a class="btn btn-secondary btn-sm mb-2" href="~/Forum"><i class="fa fa-comments mr-2" aria-hidden="true"></i>Advices</a>
            <a class="btn btn-light btn-sm mb-2" asp-page="./Create"><i class="fa fa-plus-circle mr-2" aria-hidden="true"></i>Create</a>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-lg-12">
            <form method="get">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search" name="search">
                    <div class="input-group-append">
                        <button class="btn btn-secondary" type="submit">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-lg-12">
            <div class="btn-group d-flex flex-wrap" role="group" aria-label="Advice Types">
                <button type="button" class="btn btn-light" onclick="filterAdvices('all')">All</button>
                <button type="button" class="btn btn-primary" onclick="filterAdvices('cleaning')">Cleaning</button>
                <button type="button" class="btn btn-success" onclick="filterAdvices('laundry')">Laundry</button>
                <button type="button" class="btn btn-info" onclick="filterAdvices('kitchen')">Kitchen</button>
                <button type="button" class="btn btn-warning" onclick="filterAdvices('bathroom')">Bathroom</button>
                <button type="button" class="btn btn-danger" onclick="filterAdvices('bedroom')">Bedroom</button>
                <button type="button" class="btn btn-secondary" onclick="filterAdvices('outdoors')">Outdoors</button>
                <button type="button" class="btn btn-dark" onclick="filterAdvices('organize')">Organize</button>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card mb-4 py-3">
                <div class="card-body">
                    @if (Model.Advices != null && Model.Advices.Any())
                    {
                        @foreach (var advice in Model.Advices)
                        {
                            <div class="card mb-3 advice-card @advice.Type.ToString().ToLower()" style="border: 2px solid @(GetTextColor(advice.Type.ToString().ToLower()));">
                                <div class="row">
                                    <div class="col">
                                        <h5 style="padding-left: 4px; padding-top: 4px;">@advice.Title</h5>
                                    </div>
                                    <div class="col-auto">
                                        <h6 style="padding-right: 4px;">@advice.UserName</h6>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col text-right">
                                        <p class="border-left-type" style="color: @(GetTextColor(advice.Type.ToString().ToLower())); padding-right: 4px;">#@advice.Type</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        <p class="card-text" style="padding-left: 4px; max-height: 80px; overflow: hidden;">@advice.Description</p>
                                        @if (@advice.Description.Length > 300)
                                        {
                                            <button class="btn btn-light custom-btn" style="border-radius:20px; border: 1px solid grey; padding:5px 10px; font-size:12px" onclick="toggleDescription(this)">Continue Reading</button>
                                        }
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col text-right">
                                        <p class="text-right" style="padding-right: 4px;">@advice.Time</p>
                                    </div>
                                </div>
                                <div class="row">
                                    @if(advice.UserId == Model.UserId)
                                    {
                                        <div class="col text-right">
                                            <button class='btn btn-sm' onclick="DisplayEditModal('@advice.Id')">
                                                <i class='fa fa-pencil-alt' style='color: black;'></i>
                                            </button>
                                            <a class='btn btn-sm' id='btnDelete' data-toggle="modal" data-target="#DeleteModal-@advice.Id"><i class='fa fa-trash'></i></a>
                                        </div>
                                    }
                                    <div class="modal" tabindex="-1" role="dialog" id="DeleteModal-@advice.Id">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Delete Confirmation</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    <p>Are you sure you want to delete this '@advice.Title' home chore?</p>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                    <form method="post" asp-page-handler="Delete" asp-route-id="@advice.Id">
                                                        <button type="submit" class="btn btn-danger">Delete</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-3" id="notFoundMessage" style="display: none;">
                                <div class="col-lg-12">
                                    <div>
                                        No advices found for this type.
                                    </div>
                                </div>
                            </div>
                        }

                   

                    }
                    else
                    {
                        <div>
                            Not found advices in forum
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Advice</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-page-handler="Edit" id="editForm" onsubmit="submitForm(); return false;">
                        <input type="hidden" id="editAdviceId" name="id" value="" />
                        <div class="form-group" method="post">
                            <label for="editName">Title</label>
                            <input asp-for="EditAdvice.Title" name="EditName" type="text" class="form-control" id="editName">
                            <span id="titleError" asp-validation-for="EditAdvice.Title" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label for="editAdviceType">Chore Type</label>
                            <select class="form-control" id="editAdviceType" name="EditAdviceType" asp-for="EditAdvice.Type" required>
                                <option value="0">Cleaning</option>
                                <option value="1">Laundry</option>
                                <option value="2">Kitchen</option>
                                <option value="3">Bathroom</option>
                                <option value="4">Bedroom</option>
                                <option value="5">Outdoors</option>
                                <option value="6">Organize</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="editDescription">Description</label>
                            <textarea class="form-control" id="editDescription" name="EditDescription" asp-for="EditAdvice.Description"></textarea>
                            <span  id="descriptionError" asp-validation-for="EditAdvice.Description" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label for="IsPublic">Show to show this advice</label><br />
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" id="IsPublic" name="EditIsPublic" asp-for="EditAdvice.IsPublic" value="true" checked>
                                <label class="form-check-label" for="IsPublic">Public</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" id="IsPrivate" name="EditIsPublic" asp-for="EditAdvice.IsPublic" value="false">
                                <label class="form-check-label" for="IsPrivate">Private</label>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
else
{
	<div class="row">
		<div class="col-lg-12">
			<div class="card mb-4 py-3 border-left-primary">
				<div class="collapse show">
					<div class="card-body">
						<p>You don't have permission to view this content.</p>
					</div>
				</div>
			</div>
		</div>
	</div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function submitForm() {
        $('#titleError').text('');
        $('#descriptionError').text('');

        var title = $('#editName').val();
        var description = $('#editDescription').val();

        if (title.trim() === '') {
            $('#titleError').text('Title cannot be empty');
            return;
        }

        if (description.trim() === '') {
            $('#descriptionError').text('Description cannot be empty');
            return;
        }

        $('#editForm').submit();
    }

    function filterAdvices(type) {
        $('.advice-card').hide();
        if (type === 'all') {
            $('.advice-card').show();
            
        } else {
            $('.advice-card.' + type).show();
        }

        if(type !== 'all')
        {
            if ($('.advice-card.' + type + ':visible').length === 0) {
                $('#notFoundMessage').show();
            } else {
                $('#notFoundMessage').hide();
            }
        }
        else {
            $('#notFoundMessage').hide();
        }        
    }

    function DisplayEditModal(choreId) {
        $('#editAdviceId').val(choreId);
        $.ajax({
            url: '@Url.Page("/Forum/Index")?handler=Detail&id=' + choreId,
            type: 'GET',
            success: function (data) {
                console.log('Received data:', data);
                if (data && data.title) {
                    $('#editName').val(data.title);
                    $('#editDescription').val(data.description);
                    var adviceTypeText = data.adviceType
                    $('#editAdviceType option').filter(function () {
                        return $(this).text() === adviceTypeText;
                    }).prop('selected', true);

                    if (data.isPublic) {
                        $('#IsPublic').prop('checked', true);
                    } else {
                        $('#IsPrivate').prop('checked', true);
                    }
                    $('#editModal').modal('show');
                } else {
                    console.error('Invalid data format:', data);
                }
            },
            error: function (error) {
                console.error('Error fetching chore details:', error);
            }
        });
    }

    function toggleDescription(button) {
        var description = $(button).prev();
        var fullDescription = description.data('full-description');
        if (!fullDescription) {
            fullDescription = description.text();
            description.data('full-description', fullDescription);
        }
    
        if (description.css('max-height') === 'none') {
            description.text(fullDescription.substring(0, 300));
            description.css('max-height', '80px');
            $(button).text('Continue Reading');
        } else {
            description.text(fullDescription);
            description.css('max-height', 'none');
            $(button).text('Show Less');
        }
    }

</script>

<style>
    @functions {
        string GetTextColor(string type)
        {
            switch (type.ToLower())
            {
                case "cleaning":
                    return "#4e73df";
                case "laundry":
                    return "#1cc88a";
                case "kitchen":
                    return "#36b9cc";
                case "bathroom":
                    return "#f6c23e";
                case "bedroom":
                    return "#e74a3b";
                case "outdoors":
                    return "#858796";
                case "organize":
                    return "#5a5c69";
                default:
                    return "black";
            }
        }
    }
</style>

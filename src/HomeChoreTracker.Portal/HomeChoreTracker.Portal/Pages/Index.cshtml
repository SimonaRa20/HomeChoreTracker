@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

@section HeadContent
{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.css" rel='stylesheet' />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment.min.js"></script>
}

@if (!User.Identity.IsAuthenticated)
{
    Response.Redirect("/Auth/Login");
}
@if (User.IsInRole("User"))
{
    <div class="row">
        <div class="col-lg-12">
            <a class="btn btn-secondary btn-sm mb-2" href="/"><i class="fa fa-calendar mr-2" aria-hidden="true"></i>My Calendar</a>
            <a class="btn btn-light btn-sm mb-2" asp-page="/BadgeWallet"><i class="fa fa-wallet mr-2" aria-hidden="true"></i>My Bagde Wallet</a>
            <div class="card mb-4 py-3 border-left-primary">

                <div class="d-flex justify-content-between m-2">
                    <button class='btn btn-secondary btn-sm' id='btnCalendar' data-toggle="modal" data-target="#CalendarModal"><i class="fa fa-download mr-2" aria-hidden="true"></i>Import Google Calendar events</button>
                    <button class="btn btn-secondary btn-sm" id="btnExport"><i class="fa fa-upload mr-2" aria-hidden="true"></i>Export Home Chores</button>
                </div>

                <div class="modal" tabindex="-1" role="dialog" id="CalendarModal">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Import Google Calendar events</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <form method="post" asp-action="Index" enctype="multipart/form-data">

                                <div class="modal-body">
                                    <div class="form-group">
                                        <label for="File">Import ics file</label>
                                        <input type="file" class="form-control-file" accept=".ics" id="File" name="File" asp-for="CalendarRequest.File">
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-primary">Save</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="modal" tabindex="-1" role="dialog" id="exampleModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Selected home chore</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="post" asp-page-handler="IsDone">
                <div class="modal-body">
                    <p><strong>Name:</strong> <span id="modalTitle"></span></p>
                    <p><strong>Description:</strong> <span id="modalDescription"></span></p>
                    <p><strong>Home chore type:</strong> <span id="modalChoreType"></span></p>
                    <p><strong>Points:</strong> <span id="modalPoints"></span></p>
                    <p><strong>Level Type:</strong> <span id="modalLevelType"></span></p>
                    <p><strong>How long have to take:</strong> <span id="modalTime"></span></p>
                    <p><strong>Date:</strong> <span id="modalStartDate"></span> / <span id="modalEndDate"></span></p>
                   <div class="form-check">
    <input type="hidden" id="modalId" name="id" value="" />
    <div id="doneCheckbox">
        <input type="checkbox" class="form-check-input" id="done" name="done">
        <label class="form-check-label" for="isDoneCheckbox">Check if task is done</label>
    </div>
</div>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    <div id="saveButton">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</div>

            </form>
        </div>
    </div>
</div>


                <div id="calendar" class="m-2"></div>
            </div>
        </div>
    </div>
}
else
{
    Response.Redirect("/Gamification/Index");
}
<script>
    $.getScript("https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.js").done(function () {
        $('#calendar').fullCalendar({
            defaultView: 'month',
            firstDay: 1,
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            events: [
                @if(Model.Events != null)
                {
                    @foreach (var chore in Model.Events)
                    {
                        <text>
                            {
                                id: '@chore.Id',
                                title: '@chore.Summary',
                                start: '@chore.StartDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                                end: '@chore.EndDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                                color: "#d3d3d3",
                                textColor: 'black',
                                editable: false
                            },
                        </text>
                    }
                }
    
                @foreach (var chore in Model.HomeChoreResponse)
                {
                    <text>
                        {
                            id: '@chore.Id',
                            title: '@chore.Task.Name',
                            start: '@chore.StartDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                            end: '@chore.EndDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                            color: '@GetTextColor(@chore.Task.ChoreType.ToString())',
                            textColor: 'white',
                        },
                    </text>
                }
            ],
            eventRender: function (event, element) {
                var startTime = moment(event.start._i).format('HH:mm');

                element.css('background-color', event.color);
                element.css('border-color', event.color);
                element.css('opacity', '0.8');

                var eventText = '<div class="fc-content">' +
                                    '<span class="fc-title" style="height: 32px;">' + startTime + ' ' + event.title + '</span>' +
                                '</div>';
                element.css('min-height', '16px');

                element.find('.fc-time').remove();
                element.find('.fc-title').remove();
                element.append(eventText);
            },
            eventClick: function (calEvent, jsEvent, view) {
                if (calEvent.color === "#d3d3d3") {
                    return;
                }
                $.ajax({
                    url: '@Url.Page("/Index")?handler=DetailHomeChore&id=' + calEvent.id,
                    type: 'GET',
                    success: function (response) {
                        $('#modalTitle').text(response.name);
                        $('#modalDescription').text(response.description);
                        $('#modalPoints').text(response.points);
                        $('#modalLevelType').text(response.levelType);
                        $('#modalChoreType').text(response.choreType);

                        var startDate = moment(response.startDate).format('YYYY-MM-DD HH:mm');
                        var endDate = moment(response.endDate).format('YYYY-MM-DD HH:mm');

                        $('#modalStartDate').text(startDate);
                        $('#modalEndDate').text(endDate);
                        $('#modalTime').text(response.time);

                        $('#done').prop('checked', response.isDone);
                        console.log(response.isDone)

                        if (response.isDone) {
            // Hide the "Save" button
            $('#saveButton').hide();
             $('#doneCheckbox').hide();
        } else {
            // Show the "Save" button
            $('#saveButton').show();
             $('#doneCheckbox').show();
        }

                        $('#modalId').val(response.id);
                        console.log(response)
                        $('#exampleModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        console.error("Failed to fetch event details:", error);
                        alert("Failed to fetch event details. Please try again.");
                    }
                });
            }
        });
    }).fail(function (jqxhr, settings, exception) {
        console.error("Failed to load FullCalendar:", exception);
    });
</script>

<script>
    $('#btnExport').click(function () {
        $.ajax({
            url: '@Url.Page("/Index")?handler=Detail',
            type: 'GET',
            success: function (response) {
                if (response) {
                    var blob = new Blob([response], { type: 'text/calendar' });

                    var url = window.URL.createObjectURL(blob);

                    var downloadLink = document.createElement('a');
                    downloadLink.href = url;
                    downloadLink.download = 'HomeChores.ics';

                    document.body.appendChild(downloadLink);
                    downloadLink.click();

                    document.body.removeChild(downloadLink);
                    window.URL.revokeObjectURL(url);
                } else {
                    console.error("Failed to export home chores: Empty response");
                    alert("Failed to export home chores. Please try again.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Failed to export home chores:", error);
                alert("Failed to export home chores. Please try again.");
            }
        });
    });

</script>

<style>
    @functions {
        string GetTextColor(string type)
        {
            switch (type.ToLower())
            {
                case "cleaning":
                    return "#4e73df";
                case "laundry":
                    return "#1cc88a";
                case "kitchen":
                    return "#36b9cc";
                case "bathroom":
                    return "#f6c23e";
                case "bedroom":
                    return "#e74a3b";
                case "outdoors":
                    return "#858796";
                case "organize":
                    return "#5a5c69";
                default:
                    return "black";
            }
        }
    }
</style>
<style>
    .form-check-input[type=checkbox] {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        border: 2px solid #ccc;
        outline: none;
        cursor: pointer;
        transition: background-color 0.3s;
        position: relative;
        vertical-align: middle; 
    }

    .form-check-input[type=checkbox]::before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 20px;
        height: 20px;
        background-color: transparent;
        border-radius: 50%;
        transition: background-color 0.3s;
    }

    .form-check-input[type=checkbox]:checked::before {
        background-color: #007bff;
    }

    .form-check-input[type=checkbox]:checked::after {
        content: "\2713";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #fff;
        font-size: 16px;
    }

    .form-check-label {
        margin-left: 5px;
        vertical-align: middle;
    }
</style>